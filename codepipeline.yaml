AWSTemplateFormatVersion : '2010-09-09'
Description: >
  This template deploys a CodePipeline with its required resources.

  The following stages are predefined in this template:
  - Source
  - UpdatePipeline
  - BuildAndDeployFeatureStack (Feature GitBranch only)
  - BuildAndPackage (MainGitBranch only)
  - DeployDev (MainGitBranch only)
  - DeployProd (MainGitBranch only)

  **WARNING** You will be billed for the AWS resources used if you create a stack from this template.


# To deploy this template and connect to the main git branch, run this against the leading account:
# `sam deploy -t codepipeline.yaml --stack-name <stack-name> --capabilities=CAPABILITY_IAM`.
# After creating the stack, the CodeStar Connection is in PENDING status by default. You must complete
# the OAuth handshake with the third-party provider using the installation associated with your connection.
# See https://docs.aws.amazon.com/dtconsole/latest/userguide/connections-update.html for instructions.

# If later you need to deploy a new CodePipeline to connect to a non-main git branch, run
# ```
# sam deploy -t codepipeline.yaml --stack-name <stack-name> --capabilities=CAPABILITY_IAM \
#   --parameter-overrides="GitBranch=<branch-name> CodeStarConnectionArn=<codestar-connection-arn>"
# ```


Parameters:
  AppName:
    Type: String
    Default: "PhotoOps"
  DevAppEnv:
    Type: String
    Default: "prime"
  ProdAppEnv:
    Type: String
    Default: "prime"
  FullRepositoryId:
    Type: String
    Default: "ServerlessOpsIO/PhotoOps"
  GitBranch:
    Type: String
    Default: "master"
  MainGitBranch:
    Type: String
    Default: "master"
  SamTemplate:
    Type: String
    Default: "template.yaml"
  Region:
    Type: String
    Default: "us-east-1"
  BuildPipelineArtifactsBucket:
    Type: AWS::SSM::Parameter::Value<String>
    Default: "/codepipeline-build-prime/ArtifactsBucket"
  BuildPipelineArtifactsKmsKey:
    Type: AWS::SSM::Parameter::Value<String>
    Default: "/codepipeline-build-prime/ArtifactsBucketKmsKey"
  BuildPipelineExecutionRole:
    Type: AWS::SSM::Parameter::Value<String>
    Default: "/codepipeline-build-prime/BuildPipelineExecutionRoleArn"
  BuildCloudFormationExecutionRole:
    Type: AWS::SSM::Parameter::Value<String>
    Default: "/codepipeline-build-prime/BuildCfnExecutionRoleArn"
  CodeBuildServicePolicy:
    Type: AWS::SSM::Parameter::Value<String>
    Default: "/codepipeline-build-prime/CodeBuildServicePolicyArn"
  DevPipelineExecutionRole:
    Type: AWS::SSM::Parameter::Value<String>
    Default: "/codepipeline-build-prime/DevPipelineExecutionRoleArn"
  DevCloudFormationExecutionRole:
    Type: AWS::SSM::Parameter::Value<String>
    Default: "/codepipeline-build-prime/DevCfnExecutionRoleArn"
  ProdPipelineExecutionRole:
    Type: AWS::SSM::Parameter::Value<String>
    Default: "/codepipeline-build-prime/ProdPipelineExecutionRoleArn"
  ProdCloudFormationExecutionRole:
    Type: AWS::SSM::Parameter::Value<String>
    Default: "/codepipeline-build-prime/ProdCfnExecutionRoleArn"
  CodeStarConnectionArn:
    Type: AWS::SSM::Parameter::Value<String>
    Default: "/codepipeline-build-prime/CodeStarConnectionArn"
  TestPhotoImageBucketPath:
    Type: AWS::SSM::Parameter::Value<String>
    Default: "/PhotoOpsAI-TestImages-prime/BucketPath"


Conditions:
  IsMainBranchPipeline: !Equals [!Ref GitBranch, !Ref MainGitBranch]
  IsFeatureBranchPipeline: !Not [Condition: IsMainBranchPipeline]

Resources:
  #  ____  _            _ _
  # |  _ \(_)_ __   ___| (_)_ __   ___
  # | |_) | | '_ \ / _ | | | '_ \ / _ \
  # |  __/| | |_) |  __| | | | | |  __/
  # |_|   |_| .__/ \___|_|_|_| |_|\___|
  #         |_|
  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Ref AWS::StackName
      ArtifactStore:
        Location: !Ref BuildPipelineArtifactsBucket
        Type: S3
        EncryptionKey:
          Id: !Ref BuildPipelineArtifactsKmsKey
          Type: KMS
      RoleArn: !Ref BuildPipelineExecutionRole
      RestartExecutionOnUpdate: true
      Stages:
        - Name: Source
          Actions:
            - Name: SourceCodeRepo
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeStarSourceConnection
                Version: "1"
              Configuration:
                ConnectionArn: !Ref CodeStarConnectionArn
                FullRepositoryId: !Ref FullRepositoryId
                BranchName: !Ref GitBranch
              OutputArtifacts:
                - Name: SourceCodeAsZip
              RunOrder: 1
        - Name: UpdatePipeline
          Actions:
            - Name: CreateChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                RoleArn: !Ref BuildCloudFormationExecutionRole
                StackName: !Ref AWS::StackName
                ChangeSetName: !Sub ${AWS::StackName}-ChangeSet
                TemplatePath: SourceCodeAsZip::codepipeline.yaml
                Capabilities: CAPABILITY_NAMED_IAM
                ParameterOverrides: !Sub |
                  {
                    "GitBranch": "${GitBranch}"
                  }
              InputArtifacts:
                - Name: SourceCodeAsZip
              RunOrder: 1
            - Name: ExecuteChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                RoleArn: !Ref BuildCloudFormationExecutionRole
                StackName: !Ref AWS::StackName
                ChangeSetName: !Sub ${AWS::StackName}-ChangeSet
              OutputArtifacts:
                - Name: !Sub ${AWS::StackName}ChangeSet
              RunOrder: 2

        - Name: UnitTest
          Actions:
            - Name: UnitTest
              ActionTypeId:
                Category: Test
                Owner: AWS
                Provider: CodeBuild
                Version: "1"
              Configuration:
                ProjectName: !Ref CodeBuildProjectUnitTest
              InputArtifacts:
                - Name: SourceCodeAsZip


        - Name: BuildAndPackage
          Actions:
            - Name: CodeBuild
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: "1"
              Configuration:
                ProjectName: !Ref CodeBuildProjectBuildAndPackage
                EnvironmentVariables: !Sub |
                  [
                    {"name": "REGION", "value": "${Region}"},
                    {"name": "BUILD_ARTIFACT_BUCKET", "value": "${BuildPipelineArtifactsBucket}"},
                    {"name": "BUILD_ARTIFACT_PREFIX_PATH", "value": "package/${AWS::StackName}"},
                    {"name": "BUILD_ARTIFACT_KMS_KEY", "value": "${BuildPipelineArtifactsKmsKey}"}
                  ]
              InputArtifacts:
                - Name: SourceCodeAsZip
              OutputArtifacts:
                - Name: BuildArtifactAsZip

        - !If
          - IsFeatureBranchPipeline
          - Name: FeatureBranchDeploy
            Actions:
              - Name: CreateChangeSet
                RunOrder: 1
                ActionTypeId:
                  Category: Deploy
                  Owner: AWS
                  Provider: CloudFormation
                  Version: '1'
                Configuration:
                  ActionMode: CHANGE_SET_REPLACE
                  RoleArn: !Ref DevCloudFormationExecutionRole
                  StackName:
                    'Fn::Transform':
                      Name: String
                      Parameters:
                        Operation: Regex
                        InputString: !Sub "${AppName}-${GitBranch}"
                        Match: '[/_]'
                        Replace: '-'
                  ChangeSetName:
                    'Fn::Transform':
                      Name: String
                      Parameters:
                        Operation: Regex
                        InputString: !Sub "${AppName}-${GitBranch}-ChangeSet"
                        Match: '[/_]'
                        Replace: '-'
                  TemplatePath: 'BuildArtifactAsZip::packaged.yaml'
                  ParameterOverrides:
                    'Fn::Transform':
                      Name: String
                      Parameters:
                        Operation: Regex
                        InputString: !Sub '{ "ServiceEnv": "${GitBranch}" }'
                        Match: '[/_]'
                        Replace: '-'
                  Capabilities: CAPABILITY_NAMED_IAM
                InputArtifacts:
                  - Name: BuildArtifactAsZip
                RoleArn: !Ref DevPipelineExecutionRole

              - Name: ExecuteChangeSet
                RunOrder: 2
                ActionTypeId:
                  Category: Deploy
                  Owner: AWS
                  Provider: CloudFormation
                  Version: '1'
                Configuration:
                  ActionMode: CHANGE_SET_EXECUTE
                  RoleArn: !Ref DevCloudFormationExecutionRole
                  StackName:
                    'Fn::Transform':
                      Name: String
                      Parameters:
                        Operation: Regex
                        InputString: !Sub "${AppName}-${GitBranch}"
                        Match: '[/_]'
                        Replace: '-'
                  ChangeSetName:
                    'Fn::Transform':
                      Name: String
                      Parameters:
                        Operation: Regex
                        InputString: !Sub "${AppName}-${GitBranch}-ChangeSet"
                        Match: '[/_]'
                        Replace: '-'
                OutputArtifacts:
                  - Name:
                      'Fn::Transform':
                        Name: String
                        Parameters:
                          Operation: Regex
                          InputString: !Sub "${AppName}-${GitBranch}-ChangeSet"
                          Match: '[/_]'
                          Replace: '-'
                RoleArn: !Ref DevPipelineExecutionRole
          - !Ref AWS::NoValue

        - !If
          - IsMainBranchPipeline
          - Name: DeployDev
            Actions:
              - Name: CreateChangeSet
                RunOrder: 1
                ActionTypeId:
                  Category: Deploy
                  Owner: AWS
                  Provider: CloudFormation
                  Version: '1'
                Configuration:
                  ActionMode: CHANGE_SET_REPLACE
                  RoleArn: !Ref DevCloudFormationExecutionRole
                  StackName: !Sub "${AppName}-${DevAppEnv}"
                  ChangeSetName: !Sub "${AppName}-${GitBranch}-ChangeSet"
                  TemplatePath: 'BuildArtifactAsZip::packaged.yaml'
                  ParameterOverrides: !Sub '{ "ServiceEnv": "${DevAppEnv}" }'
                  Capabilities: CAPABILITY_NAMED_IAM
                InputArtifacts:
                  - Name: BuildArtifactAsZip
                RoleArn: !Ref DevPipelineExecutionRole

              - Name: ExecuteChangeSet
                RunOrder: 2
                ActionTypeId:
                  Category: Deploy
                  Owner: AWS
                  Provider: CloudFormation
                  Version: '1'
                Configuration:
                  ActionMode: CHANGE_SET_EXECUTE
                  RoleArn: !Ref DevCloudFormationExecutionRole
                  StackName: !Sub "${AppName}-${DevAppEnv}"
                  ChangeSetName: !Sub "${AppName}-${GitBranch}-ChangeSet"
                OutputArtifacts:
                  - Name: !Sub "${AppName}-${GitBranch}-Dev-ChangeSet"
                RoleArn: !Ref DevPipelineExecutionRole

#              - Name: IntegrationTest
#                ActionTypeId:
#                  Category: Test
#                  Owner: AWS
#                  Provider: CodeBuild
#                  Version: "1"
#                Configuration:
#                  ProjectName: !Ref CodeBuildProjectIntegrationTest
#                InputArtifacts:
#                  - Name: SourceCodeAsZip
#                RunOrder: 3
          - !Ref AWS::NoValue

        - !If
          - IsMainBranchPipeline
          - Name: DeployProd
            Actions:
              # uncomment this to have a manual approval step before deployment to production
              # - Name: ManualApproval
              #   ActionTypeId:
              #    Category: Approval
              #    Owner: AWS
              #    Provider: Manual
              #    Version: "1"
              #   RunOrder: 1
              - Name: CreateChangeSet
                RunOrder: 2 # Leave at 2 in case manual approval preceding
                ActionTypeId:
                  Category: Deploy
                  Owner: AWS
                  Provider: CloudFormation
                  Version: '1'
                Configuration:
                  ActionMode: CHANGE_SET_REPLACE
                  RoleArn: !Ref ProdCloudFormationExecutionRole
                  StackName: !Sub "${AppName}-${ProdAppEnv}"
                  ChangeSetName: !Sub "${AppName}-${GitBranch}-ChangeSet"
                  TemplatePath: 'BuildArtifactAsZip::packaged.yaml'
                  ParameterOverrides: !Sub '{ "ServiceEnv": "${ProdAppEnv}" }'
                  Capabilities: CAPABILITY_NAMED_IAM
                InputArtifacts:
                  - Name: BuildArtifactAsZip
                RoleArn: !Ref ProdPipelineExecutionRole

              - Name: ExecuteChangeSet
                RunOrder: 3
                ActionTypeId:
                  Category: Deploy
                  Owner: AWS
                  Provider: CloudFormation
                  Version: '1'
                Configuration:
                  ActionMode: CHANGE_SET_EXECUTE
                  RoleArn: !Ref ProdCloudFormationExecutionRole
                  StackName: !Sub "${AppName}-${ProdAppEnv}"
                  ChangeSetName: !Sub "${AppName}-${GitBranch}-ChangeSet"
                OutputArtifacts:
                  - Name: !Sub "${AppName}-${GitBranch}-Prod-ChangeSet"
                RoleArn: !Ref ProdPipelineExecutionRole
          - !Ref AWS::NoValue


  #   ____          _      ____        _ _     _
  #  / ___|___   __| | ___| __ ) _   _(_| | __| |
  # | |   / _ \ / _` |/ _ |  _ \| | | | | |/ _` |
  # | |__| (_) | (_| |  __| |_) | |_| | | | (_| |
  #  \____\___/ \__,_|\___|____/ \__,_|_|_|\__,_|
  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Tags:
        - Key: Role
          Value: codebuild-service-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action:
              - "sts:AssumeRole"
            Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
      ManagedPolicyArns:
        - !Ref CodeBuildServicePolicy
      Policies:
        - PolicyName: TestImages
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "s3:GetObject"
                  - "s3:GetObjectVersion"
                  - "s3:PutObject"
                  - "s3:List*"
                Resource:
                  - !Join ['', ["arn:aws:s3:::", !Select [0, !Split ['/', !Ref TestPhotoImageBucketPath]]]]
                  - !Sub "arn:aws:s3:::${TestPhotoImageBucketPath}/*"


  CodeBuildProjectUnitTest:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_MEDIUM
        Image: aws/codebuild/amazonlinux2-x86_64-standard:3.0
        EnvironmentVariables:
          - Name: TEST_PHOTO_IMAGE_BUCKET_PATH
            Value: !Ref TestPhotoImageBucketPath
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Source:
        Type: CODEPIPELINE
        BuildSpec: pipeline/buildspec_unit_test.yml

  CodeBuildProjectBuildAndPackage:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_MEDIUM
        Image: aws/codebuild/amazonlinux2-x86_64-standard:3.0
        PrivilegedMode: true
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Source:
        Type: CODEPIPELINE
        BuildSpec: pipeline/buildspec_build_package.yml

  CodeBuildProjectIntegrationTest:
    Condition: IsMainBranchPipeline
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_MEDIUM
        Image: aws/codebuild/amazonlinux2-x86_64-standard:3.0
        EnvironmentVariables:
          - Name: TEST_PHOTO_IMAGE_BUCKET_PATH
            Value: !Ref TestPhotoImageBucketPath
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Source:
        Type: CODEPIPELINE
        BuildSpec: pipeline/buildspec_integration_test.yml

  CodeBuildProjectDeploy:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:3.0
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Source:
        Type: CODEPIPELINE
        BuildSpec: pipeline/buildspec_deploy.yml