{
    "Comment": "Create JPEG of an image",
    "StartAt": "Invoke CreateJpegFromRAW",
    "States": {
        "Invoke CreateJpegFromRAW": {
            "Type": "Task",
            "Resource": "arn:aws:states:::lambda:invoke",
            "OutputPath": "$.Payload",
            "Parameters": {
                "Payload.$": "$",
                "FunctionName": "${CreateJpegFromRawName}"
            },
            "Retry": [
                {
                    "ErrorEquals": [
                        "Lambda.ServiceException",
                        "Lambda.AWSLambdaException",
                        "Lambda.SdkClientException"
                    ],
                    "IntervalSeconds": 2,
                    "MaxAttempts": 3,
                    "BackoffRate": 2
                }
            ],
            "Next": "PutItem JPEG Data"
        },
        "PutItem JPEG Data": {
            "Type": "Task",
            "Resource": "arn:aws:states:::dynamodb:putItem",
            "Parameters": {
                "TableName": "${DdbTableName}",
                "Item": {
                    "pk.$": "$.Item.pk",
                    "sk.$": "$.Item.sk",
                    "s3_bucket.$": "$.Item.s3_bucket",
                    "s3_object_key.$": "$.Item.s3_object_key",
                    "size": { "N.$": "States.Format('{}', $.Item.size)" },
                    "expiration_date_time.$": "$.Item.expiration_date_time",
                    "original_s3_bucket.$": "$.Item.original_s3_bucket",
                    "original_s3_object_key.$": "$.Item.original_s3_object_key"
                }
            },
            "End": true
        }
    }
}