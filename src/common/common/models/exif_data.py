r"""
EXIF data

generated by json2python-models v0.2.1 at Wed Sep 29 15:30:53 2021
command: /Users/tom/.local/share/virtualenvs/PhotoOps-5MqeThcN/bin/json2models -s nested --datetime --max-strings-literals 0 -f dataclasses -m ExifData data/events/GetExifData-output.json
"""
from dataclasses import dataclass, field, make_dataclass, replace
from dataclasses_json import LetterCase, Undefined, config, dataclass_json
from inflection import underscore
from json import dumps

from inflection import underscore
from json_to_models.dynamic_typing import FloatString, IntString, IsoTimeString
from typing import Any, List, Optional, Union

from .file_data import FileData


@dataclass_json(letter_case=LetterCase.PASCAL, undefined=Undefined.RAISE)
@dataclass
class Ifd:
    '''EXIF IFD'''

    @dataclass_json(letter_case=LetterCase.PASCAL, undefined=Undefined.RAISE)
    @dataclass
    class ExifIfd:
        '''EXIF SubIFD'''
        exposure_time: Optional[float] = None
        f_number: Optional[float] = None
        exposure_program: Optional[str] = None
        photographic_sensitivity: Optional[List[int]] = None
        sensitivity_type: Optional[str] = None
        recommended_exposure_index: Optional[int] = None
        date_time_original: Optional[IsoTimeString] = None
        date_time_digitized: Optional[IsoTimeString] = None
        offset_time: Optional[IsoTimeString] = None
        offset_time_original: Optional[IsoTimeString] = None
        offset_time_digitized: Optional[IsoTimeString] = None
        shutter_speed_value: Optional[float] = None
        aperture_value: Optional[float] = None
        exposure_bias_value: Optional[float] = None
        max_aperture_value: Optional[float] = None
        metering_mode: Optional[str] = None
        light_source: Optional[str] = None
        flash: Optional[str] = None
        focal_length: Optional[float] = None
        user_comment: Optional[str] = None
        sub_sec_time: Optional[IntString] = None
        sub_sec_time_original: Optional[IntString] = None
        sub_sec_time_digitized: Optional[IntString] = None
        focal_plane_x_resolution: Optional[float] = None
        focal_plane_y_resolution: Optional[float] = None
        focal_plane_resolution_unit: Optional[int] = None
        sensing_method: Optional[str] = None
        file_source: Optional[str] = None
        scene_type: Optional[str] = None
        cva_pattern: Optional[List[int]] = field(default=None, metadata=config(field_name="CVAPattern"))
        custom_rendered: Optional[str] = None
        exposure_mode: Optional[str] = None
        white_balance: Optional[str] = None
        focal_length_in_35mm_film: Optional[int] = field(default=None, metadata=config(field_name="FocalLengthIn35mmFilm"))
        scene_capture_type: Optional[str] = None
        gain_control: Optional[str] = None
        contrast: Optional[str] = None
        saturation: Optional[str] = None
        sharpness: Optional[str] = None
        subject_distance_range: Optional[str] = None
        exif_version: Optional[str] = None
        components_configuration: Optional[List[int]] = None
        compressed_bits_per_pixel: Optional[float] = None
        brightness_value: Optional[float] = None
        flash_pix_version: Optional[str] = None
        color_space: Optional[str] = None
        pixel_x_dimension: Optional[int] = None
        pixel_y_dimension: Optional[int] = None
        interoperability_offset: Optional[float] = None
        digital_zoom_ratio: Optional[float] = None
        body_serial_number: Optional[str] = None
        lens_specification: Optional[List[int]] = None
        lens_make: Optional[str] = None
        lens_model: Optional[str] = None
        lens_serial_number: Optional[str] = None

        maker_note: Optional[List[int]] = field(default=None, metadata=config(field_name="MakerNote"))


    @dataclass_json(letter_case=LetterCase.PASCAL, undefined=Undefined.RAISE)
    @dataclass
    class GpsIfd:
        '''GPS SubIFD'''
        gps_version_id: Optional[List[int]] = field(default=None, metadata=config(field_name="GPSVersionID"))
        gps_latitude_ref: Optional[str] = field(default=None, metadata=config(field_name="GPSLatitudeRef"))
        gps_latitude: Optional[List[float]] = field(default=None, metadata=config(field_name="GPSLatitude"))
        gps_longitude_ref: Optional[str] = field(default=None, metadata=config(field_name="GPSLongitudeRef"))
        gps_longitude: Optional[List[float]] = field(default=None, metadata=config(field_name="GPSLongitude"))
        gps_altitude_ref: Optional[int] = field(default=None, metadata=config(field_name="GPSAltitudeRef"))
        gps_altitude: Optional[float] = field(default=None, metadata=config(field_name="GPSAltitude"))
        gps_time_stamp: Optional[List[float]] = field(default=None, metadata=config(field_name="GPSTimeStamp"))
        gps_satellites: Optional[IntString] = field(default=None, metadata=config(field_name="GPSSatellites"))
        gps_map_datum: Optional[str] = field(default=None, metadata=config(field_name="GPSMapDatum"))
        gps_date: Optional[str] = field(default=None, metadata=config(field_name="GPSDate"))


    @dataclass_json(letter_case=LetterCase.PASCAL, undefined=Undefined.RAISE)
    @dataclass
    class ImageIfd:
        '''Image SubIFD'''
        subfile_type: Optional[str] = None
        compression: Optional[str] = None
        image_width: Optional[int] = None
        image_length: Optional[int] = None
        bits_per_sample: Optional[List[int]] = None
        photometric_interpretation: Optional[str] = None
        strip_offsets: Optional[List[int]] = None
        samples_per_pixel: Optional[int] = None
        rows_per_strip: Optional[int] = None
        strip_byte_counts: Optional[List[int]] = None
        x_resolution: Optional[float] = None
        y_resolution: Optional[float] = None
        planar_configuration: Optional[str] = None
        resolution_unit: Optional[str] = None
        tile_width: Optional[int] = None
        tile_length: Optional[int] = None
        tile_offsets: Optional[Union[List[int], int]] = None
        tile_byte_counts: Optional[Union[List[int], int]] = None
        thumbnail_offset: Optional[int] = None
        thumbnail_length: Optional[int] = None
        cfa_repeat_pattern_dim: Optional[List[int]] = field(default=None, metadata=config(field_name="CFARepeatPatternDim"))
        cfa_pattern2: Optional[List[int]] = field(default=None, metadata=config(field_name="CFAPattern2"))
        sensing_method: Optional[str] = field(default=None, metadata=config(field_name="SensingMethod"))
        y_cb_cr_coefficients: Optional[List[float]] = None
        y_cb_cr_sub_sampling: Optional[List[int]] = None
        y_cb_cr_positioning: Optional[str] = None
        reference_black_white: Optional[List[float]] = None
        preview_application_name: Optional[str] = None
        preview_application_version: Optional[FloatString] = None
        preview_settings_digest: Optional[List[int]] = None
        preview_color_space: Optional[str] = None
        preview_date_time: Optional[IsoTimeString] = None
        sony_raw_file_type: Optional[str] = None
        sony_tone_curve: Optional[List[int]] = None
        chromatic_aberration_correction: Optional[str] = None
        chromatic_aberration_corr_params: Optional[List[int]] = None
        vignetting_correction: Optional[str] = None
        vignetting_corr_params: Optional[List[int]] = None
        distortion_corr_params: Optional[List[int]]= None
        cfa_plane_color: Optional[List[int]] = field(default=None, metadata=config(field_name="CFAPlaneColor"))
        cfa_layout: Optional[int] = field(default=None, metadata=config(field_name="CFALayout"))
        black_level: Optional[List[float]] = None
        black_level_repeat_dim: Optional[List[int]] = None
        lack_level_repeat_dim: Optional[List[int]] = None
        white_level: Optional[int] = None
        default_scale: Optional[List[float]] = None
        default_crop_origin: Optional[int] = None
        default_crop_size: Optional[List[int]] = None
        bayer_green_split: Optional[int] = None
        anti_alias_strength: Optional[List[float]] = None
        best_quality_scale: Optional[float] = None
        active_area: Optional[List[int]] = None
        noise_profile: Optional[List[float]] = None
        sony_crop_top_left: Optional[List[int]] = None
        distortion_correction: Optional[str] = None
        opcode_list_1: Optional[List[int]] = field(default=None, metadata=config(field_name="OpcodeList1"))
        opcode_list_2: Optional[List[int]] = field(default=None, metadata=config(field_name="OpcodeList2"))
        opcode_list_3: Optional[List[int]] = field(default=None, metadata=config(field_name="OpcodeList3"))
        cache_version: Optional[int] = None
        nikon_nef_info: Optional[List[int]] = field(default=None, metadata=config(field_name="NikonNEFInfo"))
        nikon_nef_sub_ifd1: Optional[List[int]] = field(default=None, metadata=config(field_name="NikonNEFSubIfd1"))

        # Unknown
        tag0x7001: Optional[List[int]] = None
        tag0x7011: Optional[List[int]] = None
        tag0x7020: Optional[List[int]] = None
        tag0x7310: Optional[List[int]] = None
        tag0x7313: Optional[List[int]] = None
        tag0x7316: Optional[List[int]] = None

    subfile_type: Optional[str] = None
    image_width: Optional[int] = None
    image_length: Optional[int] = None
    bits_per_sample: Optional[List[int]] = None
    compression: Optional[str] = None
    photometric_interpretation: Optional[str] = None
    strip_offsets: Optional[List[int]] = None
    samples_per_pixel: Optional[int] = None
    rows_per_strip: Optional[int] = None
    strip_byte_counts: Optional[List[int]] = None
    x_resolution: Optional[float] = None
    y_resolution: Optional[float] = None
    planar_configuration: Optional[str] = None
    resolution_unit: Optional[str] = None
    make: Optional[str] = None
    model: Optional[str] = None
    orientation: Optional[str] = None
    software: Optional[str] = None
    date_time: Optional[IsoTimeString] = None
    artist: Optional[str] = None
    sub_ifds: Optional[List[int]] = field(default_factory=list, metadata=config(field_name="SubIFDs"))
    reference_black_white: Optional[List[float]] = None
    application_notes: Optional[List[Any]] = field(default_factory=list)
    copyright: Optional[str] = None
    exif_offset: Optional[int] = None
    icc_profile: Optional[List[int]] = field(default=None, metadata=config(field_name="InterColorProfile"))
    gps_info: Optional[int] = field(default=None, metadata=config(field_name="GPSInfo"))
    date_time_original: Optional[IsoTimeString] = None
    tiffep_standard_id: Optional[List[int]] = field(default=None, metadata=config(field_name="TIFF/EPStandardID"))
    thumbnail_offset: Optional[str] = None
    thumbnail_length: Optional[str] = None
    image_number: Optional[int] = None
    iptc_naa: Optional[int] = field(default=None, metadata=config(field_name="IPTC/NAA"))
    photoshop_settings: Optional[List[int]] = None
    y_cb_cr_positioning: Optional[str] = None
    print_im: Optional[List[int]] = field(default=None, metadata=config(field_name="PrintIM"))
    image_description: Optional[int] = None
    dng_adobe_data: Optional[int] = field(default=None, metadata=config(field_name="DNGAdobeData"))
    dng_version: Optional[List[int]] = field(default=None, metadata=config(field_name="DNGVersion"))
    dng_backward_version: Optional[List[int]] = field(default=None, metadata=config(field_name="DNGBackwardVersion"))
    unique_camera_model: Optional[str] = None
    color_matrix1: Optional[List[float]] = None
    color_matrix2: Optional[List[float]] = None
    camera_calibration1: Optional[List[float]] = None
    camera_calibration2: Optional[List[float]] = None
    analog_balance: Optional[List[float]] = None
    as_shot_neutral: Optional[List[float]] = None
    baseline_exposure: Optional[float] = None
    baseline_noise: Optional[float] = None
    baseline_sharpness: Optional[float] = None
    linear_response_limit: Optional[float] = None
    camera_serial_number: Optional[int] = None
    dng_lens_info: Optional[List[float]] = field(default=None, metadata=config(field_name="DNGLensInfo"))
    shadow_scale: Optional[List[float]] = None
    calibration_illuminant1: Optional[int] = None
    calibration_illuminant2: Optional[int] = None
    raw_data_unique_id: Optional[List[int]] = field(default=None, metadata=config(field_name="RawDataUniqueID"))
    original_raw_file_name: Optional[str]= None
    camera_calibration_sig: Optional[str] = None
    profile_calibration_sig: Optional[str] = None
    profile_name: Optional[str] = None
    profile_hue_sat_map_dims: Optional[List[int]] = None
    profile_hue_sat_map_data1: Optional[List[float]] = None
    profile_hue_sat_map_data2: Optional[List[float]] = None
    profile_embed_policy: Optional[str] = None
    profile_copyright: Optional[str] = None
    forward_matrix1: Optional[List[float]] = None
    forward_matrix2: Optional[List[float]] = None
    preview_application_name: Optional[str] = None
    preview_application_version: Optional[FloatString] = None
    preview_settings_digest: Optional[List[int]] = None
    preview_color_space: Optional[str] = None
    preview_date_time: Optional[IsoTimeString] = None
    profile_look_table_dims: Optional[List[int]] = None
    profile_look_table_data: Optional[List[float]] = None
    noise_profile: Optional[List[float]] = None
    new_raw_image_digest: Optional[List[int]] = None

    # Unknown
    tag0x7316: Optional[List[int]] = None


    exif_ifd: Optional[ExifIfd] = field(default=None, metadata=config(field_name="ExifIFD"))
    gps_ifd: Optional[GpsIfd] = field(default=None, metadata=config(field_name="GpsIFD"))
    maker_note: Optional[Any] = field(default=None, metadata=config(field_name="MakerNote"))
    sub_ifd0: Optional[ImageIfd] = field(default=None, metadata=config(field_name="SubIFD0"))
    sub_ifd1: Optional[ImageIfd] = field(default=None, metadata=config(field_name="SubIFD1"))
    sub_ifd2: Optional[ImageIfd] = field(default=None, metadata=config(field_name="SubIFD2"))
    sub_ifd3: Optional[ImageIfd] = field(default=None, metadata=config(field_name="SubIFD3"))
    sub_ifd4: Optional[ImageIfd] = field(default=None, metadata=config(field_name="SubIFD4"))

    def __post_init__(self):
        # NOTE: Don't need because dataclass_json handles this for us.
        if self.exif_ifd and isinstance(self.exif_ifd, dict):
            self.exif_ifd = self.ExifIfd(**self.exif_ifd)

        if self.gps_ifd and isinstance(self.gps_ifd, dict):
            self.gps_ifd = self.GpsIfd(**self.gps_ifd)

        for _k in self.__dict__:
            if _k.startswith('sub_ifd') and isinstance(self.__dict__[_k], dict):
                self.__dict__[_k] = self.ImageIfd(**self.__dict__[_k])

        if self.maker_note is not None:
            self.maker_note = self.make_maker_note(**self.maker_note)

    def make_maker_note(self, **kwargs):
        '''Make a MakerNote dataclass'''
        new_kwargs = {}
        dc_fields=[]
        for _k in kwargs:
            snake_k = underscore(_k)
            new_kwargs[snake_k] = kwargs[_k]
            dc_fields.append((snake_k))

        MakerNote = make_dataclass('MakerNote', dc_fields)
        return MakerNote(**new_kwargs)


@dataclass_json(undefined=Undefined.RAISE)
@dataclass
class ExifDataItem:
    '''EFIX data item'''
    class ExifData:
        '''Dummy class for type checking'''
    pk: str
    sk: str
    exif: Optional[Any]=None
    file: Optional[Any]=None

    def __post_init__(self):
        if isinstance(self.exif, dict):
            self.exif = make_exif_data_dataclass(**self.exif)

        if isinstance(self.file, dict):
            self.file = FileData(**self.file)



def _convert_exif_data_attrs_to_ifds(cls) -> None:
    for _attr in cls.__dict__:
        if _attr.startswith('ifd') and not isinstance(cls.__dict__[_attr], Ifd):
            cls.__dict__[_attr] = Ifd.from_json(dumps(cls.__dict__[_attr]))


def make_exif_data_dataclass(**kwargs):
    '''
    Return an ExifData dataclass.

    The number of IFDs varies from what I understand the spec to say. I understand spec to say
    max 2 but I've seen as much as 4.
    '''

    new_kwargs = {}
    dc_fields=[]
    for _k in kwargs:
        lower_k = _k.lower()
        new_kwargs[lower_k] = kwargs[_k]
        dc_fields.append((lower_k, Ifd))

    dc = make_dataclass(
        'ExifData',
        dc_fields,
        namespace={
            '__post_init__': lambda self: _convert_exif_data_attrs_to_ifds(self)
        }
    )
    return dc(**new_kwargs)
